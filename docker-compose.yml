services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    volumes:
      - ./backend:/app
      - /app/.venv  # Exclude virtual environment from volume mount
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://localhost:8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PyTorch 2.0 Workers (CPU)
  ai-worker-pytorch-2.0:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.pytorch-2.0
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=pytorch
      - MODEL_VERSION=2.0.0
      - WORKER_TYPE=pytorch-2.0
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 2

  # PyTorch 2.1 Workers (CPU)
  ai-worker-pytorch-2.1:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.pytorch-2.1
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=pytorch
      - MODEL_VERSION=2.1.0
      - WORKER_TYPE=pytorch-2.1
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 1

  # TensorFlow Workers
  ai-worker-tensorflow:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.tensorflow
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=tensorflow
      - MODEL_VERSION=2.13.0
      - WORKER_TYPE=tensorflow
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 1

  # Scikit-learn Workers
  ai-worker-sklearn:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.sklearn
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=sklearn
      - MODEL_VERSION=1.3.0
      - WORKER_TYPE=sklearn
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 1

  # GPU Workers (PyTorch 2.0)
  ai-worker-pytorch-2.0-gpu:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.pytorch-2.0-gpu
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=pytorch
      - MODEL_VERSION=2.0.0
      - WORKER_TYPE=pytorch-2.0-gpu
      - USE_GPU=true
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 1
    # Uncomment for GPU support
    # runtime: nvidia
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all

  # GPU Workers (PyTorch 2.1)
  ai-worker-pytorch-2.1-gpu:
    build:
      context: ./ai-worker
      dockerfile: Dockerfile.pytorch-2.1-gpu
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - MODEL_FRAMEWORK=pytorch
      - MODEL_VERSION=2.1.0
      - WORKER_TYPE=pytorch-2.1-gpu
      - USE_GPU=true
    volumes:
      - ./ai-worker:/app
      - /app/.venv
      - ai_models:/app/models
    restart: unless-stopped
    deploy:
      replicas: 1
    # Uncomment for GPU support
    # runtime: nvidia
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all

volumes:
  redis_data:
    driver: local
  ai_models:
    driver: local

networks:
  default:
    name: ai-job-queue-network
