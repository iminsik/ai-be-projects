services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      worker-manager:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - WORKER_MANAGER_URL=http://worker-manager:8001
    volumes:
      - ./backend:/app
      - /app/.venv  # Exclude virtual environment from volume mount
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker-manager:
    build:
      context: ./worker-manager
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket for container management
      - ./ai-worker:/app/ai-worker  # AI worker source code
      - ai_models:/app/models  # Shared model storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/workers/status"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  ai_models:
    driver: local

networks:
  default:
    name: ai-job-queue-network
